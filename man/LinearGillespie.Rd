% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DriftFunctions.R
\name{LinearGillespie}
\alias{LinearGillespie}
\title{Run linear Gillespie simulations.
\code{LinearGillespie}}
\usage{
LinearGillespie(numSim, nu, a_mat, x0, time_vec)
}
\arguments{
\item{numSim}{Number of times to run the simulation. The output is the sum of all sims.}

\item{nu}{Matrix with a column per reaction and the same number of rows as states. Each column}

\item{a_mat}{Two column matrix with the same number of rows as reactions. Each row contains first the rate of that reaction and second the}

\item{x0}{The initial state of the system.}

\item{time_vec}{A vector of time points at which to report the simulation status.

Simulate a stochastic process with the Gillespie algorithm.}
}
\value{
A matrix with a column per data point and the same number of rows as states.
}
\description{
Use this function to run gillespie simulations. The function is used internally and is not strictly necessary to use directly.
}
\examples{

# This is the code used to simulate continous labelling
lambda = 0.1
N      = 5
Pr     = 0.5
time_points = 100:150
numSim = 1e7

beta  <- 2*lambda*Pr
alpha <- 2*lambda*(1-Pr)
#   Number of chain reactions
M      <- Ns
# Initial state vector
x0             <- c(numSim, rep(0,M)) 
names(x0)      <- paste("x",seq(M+1),sep="") 
nu             <- matrix(rep(0,(M*(M+1))),ncol=M)
diag(nu)       <- -1
diag(nu[2:M,]) <- +1
nu[M+1,M]      <- +1
nu             <- cbind(nu, -1*nu)
nu             <- nu[,-1*c(ncol(nu))]
a_mat          <- cbind(c(lambda*Ns*mu, rep(beta,M-1), rep(alpha,M-1)), c(seq(M),2:M))
sims <- LinearGillespie(numSim=1, nu, a_mat, x0, time_points) 

}
